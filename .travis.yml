language: go

go: 1.10.1

before_install:
  - go get github.com/disintegration/gift
  - go get github.com/urfave/cli

install: go build -o ionic-resource-generator

before_deploy:
  - PLATFORMS=(darwin/386 darwin/amd64 freebsd/386 freebsd/amd64 freebsd/arm linux/386 linux/amd64 linux/arm windows/386 windows/amd64)

 # build binary for all archs
  - |
    for PLATFORM in "${PLATFORMS[@]}"; do
      echo "Building $PLATFORM"
      GOOS=${PLATFORM%/*}
      GOARCH=${PLATFORM#*/}

      if [ "$GOOS" = "windows" ]; then
        build_cmd="GOOS=$GOOS GOARCH=$GOARCH go build -o ionic-resource-generator -ldflags '-w -s'"
      else
        build_cmd="CGO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH go build -o ionic-resource-generator -ldflags '-d -w -s'"
      fi
      if ! eval $build_cmd; then
        echo "Failed building ionic-resource-generator for $PLATFORM" && return 1
      fi

      if [ "$GOOS" = "windows" ]; then
        zip ionic-resource-generator-${GOOS}-${GOARCH}.zip ionic-resource-generator
      else
        tar cvzf ionic-resource-generator-${GOOS}-${GOARCH}.tgz ionic-resource-generator
      fi
    done

  - ls

deploy:
  provider: releases
  api_key: $AUTH_TOKEN
  file:
    - "ionic-resource-generator-darwin-386.tgz"
    - "ionic-resource-generator-darwin-amd64.tgz"

    - "ionic-resource-generator-freebsd-386.tgz"
    - "ionic-resource-generator-freebsd-arm.tgz"
    - "ionic-resource-generator-freebsd-amd64.tgz"

    - "ionic-resource-generator-linux-386.tgz"
    - "ionic-resource-generator-linux-arm.tgz"
    - "ionic-resource-generator-linux-amd64.tgz"

    - "ionic-resource-generator-windows-386.zip"
    - "ionic-resource-generator-windows-amd64.zip"

  skip_cleanup: true
  on:
    tags: true